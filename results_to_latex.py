import re
import math

regexp = re.compile(r"FINAL RESULTS FOR (.*)(?:[^F]|\n)+ACCEPT: (\d+)(?:[^F]|\n)+REFUSE: (\d+)(?:[^T]|\n)+NONSENSE: (\d+)(?:[^T]|\n)+ERROR: (\d+)")

data = "".join([open(f"All_{name}_results.txt").read() for name in ["phi3", "qwen"]])

phi3, qwen = [], []
for name, out in [("Phi", phi3), ("Qwen", qwen)]:
    data = open(f"All Results for {name} (updated).txt").read()
    data = regexp.findall(data)
    min_asr = 100.0
    for i, (model, accept, refuse, nonsense, error) in enumerate(data):
        assert model.startswith(name.lower())
        if i < 3:
            layers, reg = "none", 0
        else:
            _, layers, _, reg = model.split("-", 3)
        accept, refuse, nonsense, error = int(accept), int(refuse), int(nonsense), int(error)
        assert error == 0
        assert accept + refuse + nonsense + error == 200
        asr = accept / (accept + refuse + nonsense + error) * 100
        min_asr = min(min_asr, asr)
        out.append([float(reg), layers, asr])
    for item in out:
        item.append(item[-1] == min_asr)

assert len(qwen) == 21
assert len(phi3) == 21

def format_ASR(asr: float, is_min_asr: bool):
    res = f"{asr:.1f}"
    if is_min_asr:
        res = r"\textbf{" + res + r"}"
    return res

print(r"""% THIS TABLE IS AUTOGENERATED WITH results_to_latex.py IN THE REPO
\begin{table}[h]
\centering
\begin{tabular}{|c c|c c|}
\hline
\multicolumn{2}{|c|}{\textbf{Regularization}} & \multicolumn{2}{c|}{\textbf{GCG ASR (\%)}} \\
$\lambda$ & $I$ & \textbf{Qwen} & \textbf{Phi} \\""")
for i, ((q_reg, q_layers, q_asr, q_is_min_asr), (p_reg, p_layers, p_asr, p_is_min_asr)) in enumerate(zip(qwen, phi3)):
    assert q_reg == p_reg
    assert p_layers == q_layers
    if i == 0:
        print(r"""\hline \multicolumn{2}{|c|}{original model} """, end="")
    elif i == 1:
        print(r"""\multicolumn{2}{|c|}{no reg (const LR)} """, end="")
    elif i == 2:
        print(r"""\multicolumn{2}{|c|}{no reg (decay LR)} """, end="")
    else:
        if i % 3 == 0:
            print(rf"""\hline \multirow{{3}}{{*}}{{$10^{{{int(math.log10(q_reg))}}}$}}""", end="")
        print(rf"""& {q_layers} """, end="")
    print(rf"""& {format_ASR(q_asr, q_is_min_asr)} & {format_ASR(p_asr, p_is_min_asr)} \\""")
print(r"""\hline
\end{tabular}
\caption{ASR of the original model and of fine-tuned models under the GCG attack, lower is better}
\label{tab:asr}
\end{table}""")
